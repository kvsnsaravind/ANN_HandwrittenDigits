# -*- coding: utf-8 -*-
"""ANN_ Hand-Written-Digits- classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LDhuzkLmMdSBBGxbquwFg3S6gLyH3UT1

SUPERVISED LEARNING
"""

! pip install tensorflow

import tensorflow as tf
from tensorflow.keras import layers, models
import numpy as np
import matplotlib.pyplot as plt

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

y_train

x_train[0,10]

y_train[2]

x_train[0]

x_train[1]

plt.imshow(x_train[4], cmap='gray')

x_train, x_test = x_train / 255.0, x_test / 255.0

model = models.Sequential([
    layers.Flatten(input_shape=(28,28)),
    layers.Dense(125, activation='relu'),
    layers.Dense(10, activation='softmax')])

model.summary()

model.compile(optimizer='adam',
             loss='sparse_categorical_crossentropy',
             metrics=['accuracy'])

history = model.fit(x_train, y_train, epochs=5)

test_loss, test_acc = model.evaluate(x_test, y_test)
print(f'Test accuracy: {test_acc * 100:.2f}%')

predictions = model.predict(x_test)
print(predictions)
print('Predictions Shape - ', predictions.shape)

plt.imshow(x_test[0], cmap='gray')
plt.title(f"True Value : {y_test[0]}, Predicted Value : {np.argmax(predictions[0])}")
plt.show()

plt.plot(history.history['loss'], label='Training Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.title('Loss Vs Epochs')
plt.show()

